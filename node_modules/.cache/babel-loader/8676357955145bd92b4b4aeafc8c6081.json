{"ast":null,"code":"var _jsxFileName = \"/Users/mario/Documents/GitHub/whawhai/src/views/Done.tsx\";\nimport { _avatars } from \"../utils/avatars\";\nimport Title from \"../components/common/Title\";\nimport { warriorAttacks } from \"../utils/warriors\";\nimport { Grid } from \"@mui/material\";\nimport Button from \"../components/common/Button\";\nimport { _colors } from \"../utils/colors\";\nimport { CssGrid } from \"../components/common/Grid\";\nimport Avatar from \"../components/common/Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Done = _ref => {\n  let {\n    fightResult,\n    calculateMatchWinner,\n    calculateWinner,\n    setDoneScreen,\n    setWaitingScreen,\n    validateForm\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Pakipaki\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(CssGrid, {\n        item: true,\n        xs: 4,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: fightResult.Warrior1.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          size: \"md\",\n          winner: calculateMatchWinner() === 1 && true,\n          name: fightResult.Warrior1.Name,\n          src: _avatars[fightResult.Warrior1.WarriorType]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), calculateMatchWinner() === 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: _colors.green\n          },\n          children: \"Winner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          fontSize: 75,\n          color: _colors.secondary\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"VS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          fontSize: 35,\n          color: _colors.secondary\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: fightResult.Warrior2.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            width: 100,\n            height: 100,\n            border: calculateMatchWinner() === 2 ? \"3px solid\" + _colors.green : \"\"\n          },\n          src: _avatars[fightResult.Warrior2.WarriorType]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), calculateMatchWinner() === 2 && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: _colors.green\n          },\n          children: \"Winner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: _colors.secondary,\n        width: \"100%\",\n        textAlign: \"center\",\n        padding: 20,\n        marginTop: 20,\n        fontSize: 40\n      },\n      children: fightResult.Rounds.map((round, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [i + 1, \".\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            opacity: calculateWinner()[i] === 0 || calculateWinner()[i] === 1 ? 1 : 0.8\n          },\n          children: warriorAttacks[fightResult.Warrior1.WarriorType][round.Warrior1Attack]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), \" \", \"-\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            opacity: calculateWinner()[i] === 0 || calculateWinner()[i] === 2 ? 1 : 0.8\n          },\n          children: warriorAttacks[fightResult.Warrior2.WarriorType][round.Warrior2Attack]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          validateForm();\n          setDoneScreen(false);\n          setWaitingScreen(true);\n        },\n        children: \"Again!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Done;\nexport default Done;\n\nvar _c;\n\n$RefreshReg$(_c, \"Done\");","map":{"version":3,"names":["_avatars","Title","warriorAttacks","Grid","Button","_colors","CssGrid","Avatar","Done","fightResult","calculateMatchWinner","calculateWinner","setDoneScreen","setWaitingScreen","validateForm","Warrior1","Name","WarriorType","color","green","display","alignItems","justifyContent","fontSize","secondary","flexDirection","Warrior2","width","height","border","textAlign","padding","marginTop","Rounds","map","round","i","opacity","Warrior1Attack","Warrior2Attack"],"sources":["/Users/mario/Documents/GitHub/whawhai/src/views/Done.tsx"],"sourcesContent":["import { _avatars } from \"../utils/avatars\";\nimport Title from \"../components/common/Title\";\nimport { warriorAttacks } from \"../utils/warriors\";\nimport {\n    Grid,\n} from \"@mui/material\";\nimport Button from \"../components/common/Button\";\nimport { _colors } from \"../utils/colors\";\nimport { Fight } from \"../components/Router\";\nimport { CssGrid } from \"../components/common/Grid\";\nimport Avatar from \"../components/common/Avatar\";\n\nconst Done = ({ fightResult, calculateMatchWinner, calculateWinner, setDoneScreen, setWaitingScreen, validateForm }: { fightResult: Fight, calculateMatchWinner: () => number, calculateWinner: () => number[], setDoneScreen: React.Dispatch<React.SetStateAction<boolean>>, setWaitingScreen: React.Dispatch<React.SetStateAction<boolean>>, validateForm: () => void }) => {\n    return (\n        <>\n            <Title>Pakipaki</Title>\n            <Grid container>\n                <CssGrid\n                    item\n                    xs={4}\n                >\n                    <div>{fightResult.Warrior1.Name}</div>\n                    <Avatar\n                        size=\"md\"\n                        winner={calculateMatchWinner() === 1 && true}\n                        name={fightResult.Warrior1.Name}\n                        src={_avatars[fightResult.Warrior1.WarriorType]}\n                    />\n                    {calculateMatchWinner() === 1 && (\n                        <span style={{ color: _colors.green }}>Winner</span>\n                    )}\n                </CssGrid>\n                <Grid\n                    item\n                    xs={4}\n                    style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        fontSize: 75,\n                        color: _colors.secondary,\n                    }}\n                >\n                    <div>VS</div>\n                </Grid>\n                <Grid\n                    item\n                    xs={4}\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        fontSize: 35,\n                        color: _colors.secondary,\n                    }}\n                >\n                    <div>{fightResult.Warrior2.Name}</div>\n                    <Avatar\n                        sx={{\n                            width: 100,\n                            height: 100,\n                            border:\n                                calculateMatchWinner() === 2\n                                    ? \"3px solid\" + _colors.green\n                                    : \"\",\n                        }}\n                        src={_avatars[fightResult.Warrior2.WarriorType]}\n                    />\n                    {calculateMatchWinner() === 2 && (\n                        <span style={{ color: _colors.green }}>Winner</span>\n                    )}\n                </Grid>\n            </Grid>\n\n            <div\n                style={{\n                    color: _colors.secondary,\n                    width: \"100%\",\n                    textAlign: \"center\",\n                    padding: 20,\n                    marginTop: 20,\n                    fontSize: 40,\n                }}\n            >\n                {fightResult.Rounds.map((round, i) => (\n                    <div>\n                        {i + 1}.{\" \"}\n                        <span\n                            style={{\n                                opacity:\n                                    calculateWinner()[i] === 0 || calculateWinner()[i] === 1\n                                        ? 1\n                                        : 0.8,\n                            }}\n                        >\n                            {\n                                warriorAttacks[fightResult.Warrior1.WarriorType][\n                                round.Warrior1Attack\n                                ]\n                            }\n                        </span>{\" \"}\n                        -{\" \"}\n                        <span\n                            style={{\n                                opacity:\n                                    calculateWinner()[i] === 0 || calculateWinner()[i] === 2\n                                        ? 1\n                                        : 0.8,\n                            }}\n                        >\n                            {\n                                warriorAttacks[fightResult.Warrior2.WarriorType][\n                                round.Warrior2Attack\n                                ]\n                            }\n                        </span>\n                    </div>\n                ))}\n            </div>\n\n            <div style={{ marginTop: 30 }}>\n                <Button\n                    onClick={() => {\n                        validateForm()\n                        setDoneScreen(false);\n                        setWaitingScreen(true);\n                    }}\n                >\n                    Again!!!\n                </Button>\n            </div>\n        </>\n    );\n};\n\nexport default Done;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}