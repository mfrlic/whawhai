{"ast":null,"code":"var _jsxFileName = \"/Users/mario/Documents/GitHub/whawhai/src/views/Done.tsx\";\nimport { _avatars } from \"../utils/avatars\";\nimport Title from \"../components/common/Title\";\nimport { warriorAttacks } from \"../utils/warriorAttacks\";\nimport { Grid } from \"@mui/material\";\nimport Button from \"../components/common/Button\";\nimport { _colors } from \"../utils/colors\";\nimport { CssGrid } from \"../components/common/Grid\";\nimport Avatar from \"../components/common/Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Done = _ref => {\n  let {\n    fightResult,\n    calculateWinner,\n    setDoneScreen,\n    setWaitingScreen,\n    validateForm\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Pakipaki\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(CssGrid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          size: \"md\",\n          winner: calculateWinner().winner === 1 ? \"true\" : undefined,\n          name: fightResult.Warrior1.Name,\n          src: _avatars[fightResult.Warrior1.WarriorType]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CssGrid, {\n        item: true,\n        xs: 4,\n        style: {\n          fontSize: 70\n        },\n        children: \"VS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CssGrid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          size: \"md\",\n          winner: calculateWinner().winner === 2 ? \"true\" : undefined,\n          name: fightResult.Warrior2.Name,\n          src: _avatars[fightResult.Warrior2.WarriorType]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: _colors.secondary,\n        width: \"100%\",\n        textAlign: \"center\",\n        padding: 20,\n        marginTop: 20,\n        fontSize: 40\n      },\n      children: fightResult.Rounds.map((round, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [i + 1, \".\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            opacity: calculateWinner().roundWinners[i] === 0 || calculateWinner().roundWinners[i] === 1 ? 1 : 0.7\n          },\n          children: warriorAttacks[fightResult.Warrior1.WarriorType][round.Warrior1Attack]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), \" \", \"-\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            opacity: calculateWinner().roundWinners[i] === 0 || calculateWinner().roundWinners[i] === 2 ? 1 : 0.7\n          },\n          children: warriorAttacks[fightResult.Warrior2.WarriorType][round.Warrior2Attack]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        validateForm(); //calls Register and starts again\n\n        setDoneScreen(false);\n        setWaitingScreen(true);\n      },\n      style: {\n        marginTop: 30\n      },\n      children: \"Again!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Done;\nexport default Done;\n\nvar _c;\n\n$RefreshReg$(_c, \"Done\");","map":{"version":3,"names":["_avatars","Title","warriorAttacks","Grid","Button","_colors","CssGrid","Avatar","Done","fightResult","calculateWinner","setDoneScreen","setWaitingScreen","validateForm","winner","undefined","Warrior1","Name","WarriorType","fontSize","Warrior2","color","secondary","width","textAlign","padding","marginTop","Rounds","map","round","i","opacity","roundWinners","Warrior1Attack","Warrior2Attack"],"sources":["/Users/mario/Documents/GitHub/whawhai/src/views/Done.tsx"],"sourcesContent":["import { _avatars } from \"../utils/avatars\";\nimport Title from \"../components/common/Title\";\nimport { warriorAttacks } from \"../utils/warriorAttacks\";\nimport {\n    Grid,\n} from \"@mui/material\";\nimport Button from \"../components/common/Button\";\nimport { _colors } from \"../utils/colors\";\nimport { Fight } from \"../components/Router\";\nimport { CssGrid } from \"../components/common/Grid\";\nimport Avatar from \"../components/common/Avatar\";\n\nconst Done = ({ fightResult, calculateWinner, setDoneScreen, setWaitingScreen, validateForm }: { fightResult: Fight, calculateWinner: () => { roundWinners: number[], winner: number }, setDoneScreen: React.Dispatch<React.SetStateAction<boolean>>, setWaitingScreen: React.Dispatch<React.SetStateAction<boolean>>, validateForm: () => void }) => {\n    return (\n        <>\n            <Title>Pakipaki</Title>\n            <Grid container>\n                <CssGrid\n                    item\n                    xs={4}\n                >\n                    <Avatar\n                        size=\"md\"\n                        winner={calculateWinner().winner === 1 ? \"true\" : undefined}\n                        name={fightResult.Warrior1.Name}\n                        src={_avatars[fightResult.Warrior1.WarriorType]}\n                    />\n                </CssGrid>\n                <CssGrid\n                    item\n                    xs={4}\n                    style={{ fontSize: 70 }}\n                >\n                    VS\n                </CssGrid>\n                <CssGrid\n                    item\n                    xs={4}\n                >\n                    <Avatar\n                        size=\"md\"\n                        winner={calculateWinner().winner === 2 ? \"true\" : undefined}\n                        name={fightResult.Warrior2.Name}\n                        src={_avatars[fightResult.Warrior2.WarriorType]}\n                    />\n                </CssGrid>\n            </Grid>\n\n            <div\n                style={{\n                    color: _colors.secondary,\n                    width: \"100%\",\n                    textAlign: \"center\",\n                    padding: 20,\n                    marginTop: 20,\n                    fontSize: 40,\n                }}\n            >\n                {fightResult.Rounds.map((round, i) => (\n                    <div key={i}>\n                        {i + 1}.{\" \"}\n                        <span\n                            style={{\n                                opacity:\n                                    calculateWinner().roundWinners[i] === 0 || calculateWinner().roundWinners[i] === 1\n                                        ? 1\n                                        : 0.7,\n                            }}\n                        >\n                            {\n                                warriorAttacks[fightResult.Warrior1.WarriorType][\n                                round.Warrior1Attack\n                                ]\n                            }\n                        </span>{\" \"}\n                        -{\" \"}\n                        <span\n                            style={{\n                                opacity:\n                                    calculateWinner().roundWinners[i] === 0 || calculateWinner().roundWinners[i] === 2\n                                        ? 1\n                                        : 0.7,\n                            }}\n                        >\n                            {\n                                warriorAttacks[fightResult.Warrior2.WarriorType][\n                                round.Warrior2Attack\n                                ]\n                            }\n                        </span>\n                    </div>\n                ))}\n            </div>\n\n            <Button\n                onClick={() => {\n                    validateForm() //calls Register and starts again\n                    setDoneScreen(false);\n                    setWaitingScreen(true);\n                }}\n                style={{ marginTop: 30 }}\n            >\n                Again!!!\n            </Button>\n        </>\n    );\n};\n\nexport default Done;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}